---
- name: Generate an SSH key for Ansible user and generate host key
  delegate_to: "localhost"
  block:
    - name: Create and change permission on temporary key directory (clientside)
      ansible.builtin.tempfile:
        state: directory
      check_mode: false
      changed_when: false
      register: _tempfile

    - name: Set ssh key related facts
      ansible.builtin.set_fact:
        cloud_init_ssh_keygen_storagedir: "{{ _tempfile.path }}"
        cloud_init_ssh_keygen_keyname: "id_ansible_{{ cloud_init_machine_name }}"

    - name: Generate SSH key with role
      ansible.builtin.include_role:
        name: pimvh.ssh_keygen
        apply:
          delegate_to: localhost
      vars:
        ssh_keygen_storagedir: "{{ cloud_init_ssh_keygen_storagedir }}"
        ssh_keygen_keyname: "{{ cloud_init_ssh_keygen_keyname }}"
        ssh_keygen_comment: "Ansible@{{ cloud_init_machine_name }}"
        ssh_keygen_cipher: ed25519
        ssh_keygen_no_passphrase: true

    - name: Set newly created key as fact
      ansible.builtin.set_fact:
        # use rstrip to keep newlines of the ssh keys
        _github_public_sshkey: "{{ lookup('ansible.builtin.file', cloud_init_ssh_keygen_storagedir + '/' + cloud_init_ssh_keygen_keyname + '.pub', rstrip=false) }}"
        _github_private_sshkey: "{{ lookup('ansible.builtin.file', cloud_init_ssh_keygen_storagedir + '/' + cloud_init_ssh_keygen_keyname, rstrip=false) }}"
      ignore_errors: "{{ ansible_check_mode }}"

  always:
    - name: Remove temporary directory (clientside)
      ansible.builtin.file:
        name: "{{ _tempfile.path }}"
        state: absent
      check_mode: false
      changed_when: false
      delegate_to: "localhost"

    - name: Set generated key as fact, to prevent issues in Check mode
      ansible.builtin.set_fact:
        # default filter for allowing checkmode to generate a template
        _github_public_sshkey: "{{ _github_public_sshkey | default('<< will be generated >>') }}"
        _github_private_sshkey: "{{ _github_private_sshkey | default(['<< will be generated >>']) }}"
      when: ansible_check_mode
